# Finds the Googletest Mocking library

# This file can be configured with the following CMake variables:
# - GMOCK_ROOT_DIR
# - GMOCK_INCLUDE_DIR
# - GMOCK_LIBRARY
# - GMOCK_USE_DEBUG_BUILD

# Or, alternatively, the following environment variables:
# - GMOCK_INSTALL_DIR
# - LIBRARY_PATH

include(FindPackageHandleStandardArgs)
find_package(PkgConfig QUIET)

pkg_check_modules(PC_GMOCK QUIET gmock)
pkg_check_modules(PC_GMOCK_MAIN QUIET gmock_main)

if(WIN32 AND NOT DEFINED GMOCK_USE_DEBUG_BUILD)
  if(CMAKE_BUILD_TYPE MATCHES "(Debug|DEBUG|debug)")
    set(GMOCK_BUILD_TYPE DEBUG)
  else()
    set(GMOCK_BUILD_TYPE RELEASE)
  endif()
elseif(GMOCK_USE_DEBUG_BUILD)
  set(GMOCK_BUILD_TYPE DEBUG)
else()
  set(GMOCK_BUILD_TYPE RELEASE)
endif()

set(GMOCK_DEFINITIONS ${PC_GMOCK_CFLAGS_OTHER})
set(GMOCK_MAIN_DEFINITIONS ${PC_GMOCK_MAIN_CFLAGS_OTHER})
set(GMOCK_SEARCH_DIR ${GMOCK_ROOT_DIR} ${CONAN_GMOCK_ROOT} $ENV{GMOCK_INSTALL_DIR})

find_path(GMOCK_INCLUDE_DIR
  gmock/gmock.h
  HINTS ${GMOCK_SEARCH_DIR} ${PC_GMOCK_INCLUDEDIR} ${PC_GMOCK_INCLUDE_DIRS}
  PATH_SUFFIXES include
)

find_library(GMOCK_LIBRARY_DEBUG
  NAMES gmockd
  HINTS ${GMOCK_SEARCH_DIR} ${PC_GMOCK_LIBDIR} ${PC_GMOCK_LIBRARY_DIRS}
  PATH_SUFFIXES lib bin
  ENV LIBRARY_PATH
)

find_library(GMOCK_MAIN_LIBRARY_DEBUG
  NAMES gmock_maind
  HINTS ${GMOCK_SEARCH_DIR} ${PC_GMOCK_LIBDIR} ${PC_GMOCK_MAIN_LIBDIR} ${PC_GMOCK_LIBRARY_DIRS}
  PATH_SUFFIXES lib bin
  ENV LIBRARY_PATH
)

find_library(GMOCK_LIBRARY_RELEASE
  NAMES gmock
  HINTS ${GMOCK_SEARCH_DIR} ${PC_GMOCK_LIBDIR} ${PC_GMOCK_LIBRARY_DIRS}
  PATH_SUFFIXES lib bin
  ENV LIBRARY_PATH
)

find_library(GMOCK_MAIN_LIBRARY_RELEASE
  NAMES gmock_main
  HINTS ${GMOCK_SEARCH_DIR} ${PC_GMOCK_LIBDIR} ${PC_GMOCK_MAIN_LIBDIR} ${PC_GMOCK_LIBRARY_DIRS}
  PATH_SUFFIXES lib bin
  ENV LIBRARY_PATH
)

if(GMOCK_MAIN_LIBRARY_DEBUG OR GMOCK_MAIN_LIBRARY_RELEASE)
  set(GMOCK_MAIN_FOUND TRUE)
endif()

set(GMOCK_LIBRARIES_DEBUG ${GMOCK_LIBRARY_DEBUG})
set(GMOCK_MAIN_LIBRARIES_DEBUG ${GMOCK_MAIN_LIBRARY_DEBUG})
set(GMOCK_LIBRARIES_RELEASE ${GMOCK_LIBRARY_RELEASE})
set(GMOCK_MAIN_LIBRARIES_RELEASE ${GMOCK_MAIN_LIBRARY_RELEASE})
set(GMOCK_LIBRARIES ${GMOCK_LIBRARIES_${GMOCK_BUILD_TYPE}})
set(GMOCK_MAIN_LIBRARIES ${GMOCK_MAIN_LIBRARIES_${GMOCK_BUILD_TYPE}})
set(GMOCK_INCLUDE_DIRS ${GMOCK_INCLUDE_DIR})
seT(GMOCK_VERSION ${PC_GMOCK_VERSION})

find_package_handle_standard_args(GMock
  REQUIRED_VARS GMOCK_LIBRARIES GMOCK_INCLUDE_DIRS
  VERSION_VAR GMOCK_VERSION
  HANDLE_COMPONENTS
)

if(GMOCK_FOUND)
  add_library(GMock::GMock UNKNOWN IMPORTED)
  set_target_properties(GMock::GMock PROPERTIES
    INTERFACE_INCLUDE_DIRECTORIES "${GMOCK_INCLUDE_DIRS}"
    IMPORTED_LOCATION "${GMOCK_LIBRARIES}"
    INTERFACE_COMPILE_OPTIONS "${GMOCK_DEFINITIONS}"
  )
endif()

if(GMOCK_MAIN_FOUND)
  add_library(GMock::Main UNKNOWN IMPORTED)
  set_target_properties(GMock::Main PROPERTIES
    INTERFACE_INCLUDE_DIRECTORIES "${GMOCK_INCLUDE_DIRS}"
    IMPORTED_LOCATION "${GMOCK_MAIN_LIBRARIES}"
    INTERFACE_COMPILE_OPTIONS "${GMOCK_MAIN_DEFINITIONS}"
  )
endif()

mark_as_advanced(GMOCK_INCLUDE_DIRS GMOCK_LIBRARIES)
